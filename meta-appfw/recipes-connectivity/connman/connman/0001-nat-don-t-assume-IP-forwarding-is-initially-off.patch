From 3e8760ce89cd23efe6ac2e9bdc2e63ad9cda30d1 Mon Sep 17 00:00:00 2001
From: Krisztian Litkey <kli@iki.fi>
Date: Wed, 30 Mar 2016 20:11:20 +0300
Subject: [PATCH 1/1] nat: don't assume IP forwarding is initially off.

Don't blindly assume IP forwarding is initially off. Instead,
save its initial state when we're altering it for the first
time. Once we don't need IP forwarding, restore its original
state instead of simply turning it off.

The original behavior can break setups where a blacklisted
subset of interfaces is managed by some other entity which
needs IP forwarding enabled. A typical such case is running
globally visible virtual machines or containers on the same
host as ConnMan.

Upstream-Status: Pending

Signed-off-by: Krisztian Litkey <krisztian.litkey@intel.com>
---
 src/nat.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/src/nat.c b/src/nat.c
index 063f085..d5bdcf6 100644
--- a/src/nat.c
+++ b/src/nat.c
@@ -31,6 +31,7 @@
 
 static char *default_interface;
 static GHashTable *nat_hash;
+static int was_forwarding = -1;
 
 struct connman_nat {
 	char *address;
@@ -40,6 +41,15 @@ struct connman_nat {
 	char *interface;
 };
 
+
+static void save_ip_forward(FILE *f)
+{
+	if (fgetc(f) == '0')
+		was_forwarding = 0;
+	else
+		was_forwarding = 1;
+}
+
 static int enable_ip_forward(bool enable)
 {
 	FILE *f;
@@ -48,10 +58,13 @@ static int enable_ip_forward(bool enable)
 	if (!f)
 		return -errno;
 
+	if (was_forwarding < 0)
+		save_ip_forward(f);
+
 	if (enable)
 		fprintf(f, "1");
 	else
-		fprintf(f, "0");
+		fprintf(f, "%s", was_forwarding ? "1" : "0");
 
 	fclose(f);
 
-- 
2.5.5

